for (j in 1:length(a)) {
out <- a[[j]]
n <- nrow(out)
for (i in 2:(nrow(out)+1)) {
sav[i, j*3-2] <- sprintf("%.2f", out[i-1, 1])
sav[i, j*3-1] <- paste0("(", sprintf("%.2f", out[i-1, 2]), ")")
}
}
sav[1, 1] <- sprintf("%.2f", out1[1, 1])
sav[1, 2] <- paste0("(", sprintf("%.2f", out1[1, 2]), ")")
sav[1, 4] <- sprintf("%.2f", out1[1, 1])
sav[1, 5] <- paste0("(", sprintf("%.2f", out1[1, 2]), ")")
sav[1, 7] <- sprintf("%.2f", out2[1, 1])
sav[1, 8] <- paste0("(", sprintf("%.2f", out2[1, 2]), ")")
sav[1, 10] <- sprintf("%.2f", out3[1, 1])
sav[1, 11] <- paste0("(", sprintf("%.2f", out3[1, 2]), ")")
colnames(sav) <- c("LDW-CPS1", "", "", "LDW-PSID1", "", "", "LDW-CPS1 (PS Trimmed) ", "", "", "LDW-PSID1 (PS Trimmed)", "")
rownames(sav) <- c("Experimental Benchmark", "Difference-in-Means", "Regression", " Oaxaca Blinder", "GRF", "NN Matching", "PS Matching", "IPW", "CBPS", "Entropy Balancing", "DML-ElasticNet", "AIPW-GRF")
sav %>% knitr::kable(booktabs=TRUE, caption = " Table A4 in the Supplementary Materials (SM), ATT Estimates: LaLonde Male Sample")
# estimate catt
catt.nsw <- catt(nsw, Y, treat, covar)
catt.cps <- catt(ldw_cps, Y, treat, covar)
catt.psid <- catt(ldw_psid, Y, treat, covar)
catt.cps.trim <- catt(nsw_cps_trim_match, Y, treat, covar)
catt.psid.trim <- catt(nsw_psid_trim_match, Y, treat, covar)
# trimmed experimental data
catt.nsw.cps <- catt(nsw_trim_cps, Y, treat, covar)
catt.nsw.psid <- catt(nsw_trim_psid, Y, treat, covar)
par(mfrow = c(2,2))
# plot catt - "CATT (Experimental)" and "CATT (CPS-Full)"
catt1 <- catt.nsw$catt
att1 <- catt.nsw$att[1]
catt2 <- catt.cps$catt
att2 <- catt.cps$att[1]
plot_catt(catt1, catt2, att1, att2, "CATT (Experimental)", "CATT (CPS-Full)",
main = "A. NSW-CPS1", c(-8000, 8000))
# experimental
out1 <- estimate_all(nsw, "re78", "treat", covar)
out2 <- estimate_all(nsw_trim_cps, "re78", "treat", covar)
out3 <- estimate_all(nsw_trim_psid, "re78", "treat", covar)
# nonexperimental
out4 <- estimate_all(nsw_cps, "re78", "treat", covar)
out5 <- estimate_all(nsw_psid, "re78", "treat", covar)
out6 <- estimate_all(nsw_cps_trim_match, "re78", "treat", covar)
out7 <- estimate_all(nsw_psid_trim_match, "re78", "treat", covar)
# print the result
a <- list(out4, out5, out6, out7)
n <- nrow(out1)
sav <- matrix("", n+1, length(a)*3-1)
for (j in 1:length(a)) {
out <- a[[j]]
n <- nrow(out)
for (i in 2:(nrow(out)+1)) {
sav[i, j*3-2] <- sprintf("%.2f", out[i-1, 1])
sav[i, j*3-1] <- paste0("(", sprintf("%.2f", out[i-1, 2]), ")")
}
}
sav[1, 1] <- sprintf("%.2f", out1[1, 1])
sav[1, 2] <- paste0("(", sprintf("%.2f", out1[1, 2]), ")")
sav[1, 4] <- sprintf("%.2f", out1[1, 1])
sav[1, 5] <- paste0("(", sprintf("%.2f", out1[1, 2]), ")")
sav[1, 7] <- sprintf("%.2f", out2[1, 1])
sav[1, 8] <- paste0("(", sprintf("%.2f", out2[1, 2]), ")")
sav[1, 10] <- sprintf("%.2f", out3[1, 1])
sav[1, 11] <- paste0("(", sprintf("%.2f", out3[1, 2]), ")")
colnames(sav) <- c("NSW-CPS1", "", "", "NSW-PSID1", "", "", "NSW-CPS1 (PS Trimmed) ", "", "", "NSW-PSID1 (PS Trimmed)", "")
rownames(sav) <- c("Experimental Benchmark", "Difference-in-Means", "Regression", " Oaxaca Blinder", "GRF", "NN Matching", "PS Matching", "IPW", "CBPS", "Entropy Balancing", "DML-ElasticNet", "AIPW-GRF")
sav %>% knitr::kable(booktabs=TRUE, caption = " Table A4 in the Supplementary Materials (SM), ATT Estimates: LaLonde Male Sample")
# estimate catt
catt.nsw <- catt(nsw, Y, treat, covar)
catt.cps <- catt(nsw_cps, Y, treat, covar)
catt.psid <- catt(nsw_psid, Y, treat, covar)
catt.cps.trim <- catt(nsw_cps_trim_match, Y, treat, covar)
catt.psid.trim <- catt(nsw_psid_trim_match, Y, treat, covar)
# trimmed experimental data
catt.nsw.cps <- catt(nsw_trim_cps, Y, treat, covar)
catt.nsw.psid <- catt(nsw_trim_psid, Y, treat, covar)
#load the data
load("data/qte_nsw.rds")
par(mfrow = c(2,2))
# plot catt - "CATT (Experimental)" and "CATT (CPS-Full)"
catt1 <- catt.nsw$catt
att1 <- catt.nsw$att[1]
catt2 <- catt.cps$catt
att2 <- catt.cps$att[1]
plot_catt(catt1, catt2, att1, att2, "CATT (Experimental)", "CATT (CPS-Full)",
main = "A. NSW-CPS1", c(-8000, 8000))
# plot catt - "CATT (Experimental)" and "CATT (PSID-Full)"
catt1 <- catt.nsw$catt
att1 <- catt.nsw$att[1]
catt2 <- catt.psid$catt
att2 <- catt.psid$att[1]
plot_catt(catt1, catt2, att1, att2, "CATT (Experimental)", "CATT (PSID-Full)",
main = "B. NSW-PSID1", c(-8000, 8000))
# plot catt - "CATT (Experimental)" and "CATT (CPS-Trimmed)"
catt1 <- catt.nsw.cps$catt
att1 <- catt.nsw.cps$att[1]
catt2 <- catt.cps.trim$catt
att2 <- catt.cps.trim$att[1]
plot_catt(catt1, catt2, att1, att2, "CATT (Experimental)", "CATT (CPS-Trimmed)",
main = "C. NSW-CPS1 Trimmed", c(-8000, 8000))
# plot catt - "CATT (Experimental)" and "CATT (PSID-Trimmed)"
catt1 <- catt.nsw.psid$catt
att1 <- catt.nsw.psid$att[1]
catt2 <- catt.psid.trim$catt
att2 <- catt.psid.trim$att[1]
plot_catt(catt1, catt2, att1, att2, "CATT (Experimental)", "CATT (PSID-Trimmed)",
main = "D. NSW-PSID1 Trimmed", c(-8000, 8000))
# estimate qte (some of the following lines are not run due to computational limitation)
qte.nsw <- est_qte(Y, treat, NULL, data = nsw)
qte.nsw.cps <- est_qte(Y, treat, NULL, data = nsw_trim_cps)
qte.nsw.psid <- est_qte(Y, treat, NULL, data = nsw_trim_psid)
#qte.nsw_cps <- est_qte(Y, treat, covar, data = nsw_cps) # adjusted
#qte.nsw_cps0 <- est_qte(Y, treat, NULL, data = nsw_cps) # unadjusted
qte.nsw_cps.trim <- est_qte(Y, treat, covar, data = nsw_cps_trim_match) # adjusted
qte.nsw_cps.trim0 <- est_qte(Y, treat, NULL, data = nsw_cps_trim_match) # unadjusted
#qte.nsw_psid <- est_qte(Y, treat, covar, data = nsw_psid) # adjusted
#qte.nsw_psid0 <- est_qte(Y, treat, NULL, data = nsw_psid) # unadjusted
qte.nsw_psid.trim <- est_qte(Y, treat, covar, data = nsw_psid_trim_match) # adjusted
qte.nsw_psid.trim0 <- est_qte(Y, treat, NULL, data = nsw_psid_trim_match) # unadjusted
# plot qte
#load the data
load("data/qte_nsw.rds")
par(mfrow = c(2,2))
# CPS
plot_qte(qte.nsw_cps, qte.nsw_cps0, qte.nsw, main = "NSW-CPS", ylim = c(-25000, 15000))
legend("bottomleft", legend = c("Experimental", "Unadjusted", "Adjusted"), lty = 1, pch = c(16, 17, 16), col = c(4, 2, 1), bty = "n")
## CPS trimmed
plot_qte(qte.nsw_cps.trim, qte.nsw_cps.trim0, qte.nsw.cps, main = "NSW-CPS (Trimmed)", ylim = c(-25000, 15000))
legend("bottomleft", legend = c("Experimental", "Unadjusted", "Adjusted"),
lty = 1, pch = c(16, 17, 16), col = c(4, 2, 1), bty = "n")
# PSID
plot_qte(qte.nsw_psid, qte.nsw_psid0, qte.nsw, main = "NSW-PSID", ylim = c(-25000, 15000))
legend("bottomleft", legend = c("Experimental", "Unadjusted", "Adjusted"),
lty = 1, pch = c(16, 17, 16), col = c(4, 2, 1), bty = "n")
# PSID trimmed
plot_qte(qte.nsw_psid.trim, qte.nsw_psid.trim0, qte.nsw.psid, main = "NSW-PSID (Trimmed)", ylim = c(-25000, 15000))
legend("bottomleft", legend = c("Experimental", "Unadjusted", "Adjusted"),
lty = 1, pch = c(16, 17, 16), col = c(4, 2, 1), bty = "n")
par(mfrow = c(2,2))
## datasets to be used: nsw, nsw_trim_cps, nsw_trim_psid
Y <- "re78"
treat <- "treat"
covar <- c("age", "education", "black", "hispanic", "married", "nodegree", "re75", "u75")
bm <- c("re75")
# NSW data
sens_ana(nsw, Y, treat, covar, bm, kd = 1)
# trimmed NSW-CPS data
sens_ana(nsw_trim_cps, Y, treat, covar, bm, kd = 1:3)
# trimmed NSW-PSID data
sens_ana(nsw_trim_psid, Y, treat, covar, bm, kd = 1)
par(mfrow = c(1,2))
## datasets to be used: nsw, nsw_trim_cps, nsw_trim_psid
Y <- "re78"
treat <- "treat"
covar <- c("age", "education", "black", "hispanic", "married", "nodegree", "re75", "u75")
bm <- c("re75")
# trimmed NSW-CPS data
sens_ana(nsw_trim_cps, Y, treat, covar, bm, kd = 1:3)
# trimmed NSW-PSID data
sens_ana(nsw_trim_psid, Y, treat, covar, bm, kd = 1)
render_book(new_session = FALSE)
bookdown::render_book(new_session = FALSE)
bookdown::render_book(new_session = FALSE)
bookdown::render_book(new_session = F)
# required packages
packages <- c("haven", "labelled", "Matching", "grf", "sensemakr", "qte",
"estimatr", "CBPS", "hbal", "DoubleML", "mlr3learners", "mlr3","fixest", "ggplot2")
# install packages
install_all <- function(packages) {
installed_pkgs <- installed.packages()[, "Package"]
for (pkg in packages) {
if (!pkg %in% installed_pkgs) {
install.packages(pkg)
}
}
}
install_all(packages)
# load packages
library(haven)
library(labelled)
library(grf)
library(Matching)
library(estimatr)
library(hbal)
library(CBPS)
library(DoubleML)
library(mlr3learners)
library(mlr3)
library(fixest)
library(ggplot2)
library(qte)
library(sensemakr)
plot_hist <- function(data, var, treat, main = NULL, odds = FALSE,
breaks = 40, density = TRUE, xlim = NULL, ylim = NULL,
xlab = NULL, text.size = 0.8) {
ntr <- sum(data[, treat] == 1)
nco <- sum(data[, treat] == 0)
if (odds == TRUE) {
data[, var] <- log(data[, var]/(1-data[, var]))
if (is.null(xlab) == TRUE) {xlab <- "Log Odds"}
} else {
if (is.null(xlab) == TRUE) {xlab <- "Propensity Score"}
}
if (is.null(xlim)) {
if (odds == TRUE) {
xlim <- range(data[, var])
cat(xlim)
} else {
xlim <- c(0,1)
}
}
intervals <- seq(xlim[1], xlim[2], length.out = breaks + 1)
h0 <- as.numeric(table(cut(data[data[,treat]==0, var],
breaks = intervals, include.lowest = TRUE)))
h1 <- as.numeric(table(cut(data[data[,treat]==1, var],
breaks = intervals, include.lowest = TRUE)))
if (density == TRUE) {
h0 <- h0/sum(h0); h1 <- h1/sum(h1)
}
s <- cbind.data.frame(h0, h1)
if (is.null(ylim)) {
ylim.max <- max(s$h0, s$h1) * 1.2
ylim <- c(-ylim.max, ylim.max)
}
par(mar = c(4, 4, 1, 1))
barplot(s$h0 * -1, names.arg = sprintf("%.2f", intervals[-1]),
col = "#AAAAAA80", main = main, cex.lab = 1.3,
ylim = ylim, xlab = xlab, cex.axis = 1.2, cex.names = 1.2,
ylab = "Density", border = NA, axes = TRUE)
barplot(s$h1, col = "#ff000080", add = TRUE,
border = NA, cex.axis = 1.2)
abline(h = 0, col = "gray60", lty = 2, lwd = 1.5)
axis(1, at = seq(1, 60, length.out = breaks/2), labels = FALSE)
usr <- par("usr")
user_x <- usr[1] + 0.03 * (usr[2] - usr[1])
user_y <- usr[3] + 0.92 * (usr[4] - usr[3])
text(user_x, user_y, paste("Ntr = ", ntr), pos = 4, cex = text.size)
text(user_x, user_y - 0.05 * (usr[4] - usr[3]), paste("Nco = ", nco),
pos = 4, cex = text.size)
box()
}
assess_overlap <- function(data, treat, cov, odds = TRUE, num.trees = NULL, seed = 1234, breaks = 50, xlim = NULL, ylim = NULL) {
if(is.null(num.trees))
{
p.forest1 <- probability_forest(X = data[, cov],
Y = as.factor(data[,treat]), seed = seed)
}
else
{
p.forest1 <- probability_forest(X = data[, cov],
Y = as.factor(data[,treat]), seed = seed, num.trees = num.trees)
}
data$ps_assoverlap <- p.forest1$predictions[,2]
#range(lcps.plus$ps)
data$ps_assoverlap[which(abs(data$ps_assoverlap) <= 1e-7)] <- 1e-7
#range(lcps.plus$ps)
if(odds == TRUE)
{
plot_hist(data, "ps_assoverlap", treat, odds = TRUE, breaks = breaks,
density = TRUE, main = "", xlim = xlim, ylim = ylim)
}
else
{
plot_hist(data, "ps_assoverlap", treat, odds = FALSE, breaks = breaks,
density = TRUE, main = "", xlim = c(0, 1), ylim = ylim)
}
return(data)
}
bookdown::render_book(new_session = F)
bookdown::serve_book()
bookdown::serve_book(new_session = F)
bookdown::preview_chapter()
bookdown::preview_chapter("05-references.Rmd")
bookdown::render_book(c("index.Rmd", "05-reference.Rmd", preview = T)
)
bookdown::render_book(c("index.Rmd", "05-reference.Rmd"), preview = T)
bookdown::render_book(c("index.Rmd", "05-references.Rmd"), preview = T)
bookdown::render_book(input = c("index.Rmd", "05-reference.Rmd"), preview = T)
bookdown::render_book(input = c("index.Rmd", "05-references.Rmd"), preview = T)
bookdown::render_book(input = c("05-references.Rmd"), preview = T)
bookdown::render_book(new_session = F)
par(mfrow = c(2,2))
par(mar = c(4, 4, 1, 2))
plot(1, xlim = c(3.7, 13.3), ylim = c(-20, 10), type = "n", axes = FALSE,
ylab = "Effects on Earnings (thousand USD)", xlab = "Year Relative to Winning")
box(); axis(2)
axis(1, at = 4:13, labels = c(-3:6))
abline(h = 0, v= 6.5, col = "gray60", lty = 2, lwd = 2)
for (i in 4:13) {
# full dataset with DIM
lines(c(i-0.15, i-0.15), est[[i]][1,3:4], lty = 1, lwd = 2, col = "grey60") # CI
points(i-0.15, est[[i]][1,1], pch = 18, col = "grey60", cex = 1.2)  # Coef
# full dataset
lines(c(i, i), est[[i]][2,3:4], lwd = 2) # CI
points(i, est[[i]][2,1], pch = 16)  # Coef
# matched dataset
lines(c(i+0.15, i+0.15), est2[[i]][2,3:4], col = "maroon", lwd = 1.5) # CI
points(i+0.15, est2[[i]][2,1], col = "maroon", pch = 17)  # Coef
}
legend("topright", legend = c("DIM,  Full (43: 259)", "AIPW, Full (43: 259)",
"AIPW, PS Matched (43: 43)"), lwd = 2,
lty = c(1, 1, 1), pch = c(18, 16, 17),
col = c("grey50", "black", "maroon"), bty = "n")
par(mar = c(4, 4, 1, 2))
plot(1, xlim = c(3.7, 13.3), ylim = c(-20, 10), type = "n", axes = FALSE,
ylab = "Effects on Earnings (thousand USD)", xlab = "Year Relative to Winning")
box(); axis(2)
axis(1, at = 4:13, labels = c(-3:6))
abline(h = 0, v= 6.5, col = "gray60", lty = 2, lwd = 2)
for (i in 4:13) {
# full dataset with DIM
lines(c(i-0.15, i-0.15), est3[[i]][1,3:4], lty = 1, lwd = 2, col = "grey60") # CI
points(i-0.15, est3[[i]][1,1], pch = 18, col = "grey60", cex = 1.2)  # Coef
# full dataset
lines(c(i, i), est3[[i]][2,3:4], lwd = 2) # CI
points(i, est3[[i]][2,1], pch = 16)  # Coef
# matched dataset
lines(c(i+0.15, i+0.15), est4[[i]][2,3:4], col = "maroon", lwd = 1.5) # CI
points(i+0.15, est4[[i]][2,1], col = "maroon", pch = 17)  # Coef
}
legend("topright", legend = c("DIM,  Full (194: 259)", "AIPW, Full (194: 259)",
"AIPW, PS Matched (194: 194)"), lwd = 2,
lty = c(1, 1, 1), pch = c(18, 16, 17),
col = c("grey50", "black", "maroon"), bty = "n")
par(mfrow = c(2,1))
par(mar = c(4, 4, 1, 2))
plot(1, xlim = c(3.7, 13.3), ylim = c(-20, 10), type = "n", axes = FALSE,
ylab = "Effects on Earnings (thousand USD)", xlab = "Year Relative to Winning")
box(); axis(2)
axis(1, at = 4:13, labels = c(-3:6))
abline(h = 0, v= 6.5, col = "gray60", lty = 2, lwd = 2)
for (i in 4:13) {
# full dataset with DIM
lines(c(i-0.15, i-0.15), est[[i]][1,3:4], lty = 1, lwd = 2, col = "grey60") # CI
points(i-0.15, est[[i]][1,1], pch = 18, col = "grey60", cex = 1.2)  # Coef
# full dataset
lines(c(i, i), est[[i]][2,3:4], lwd = 2) # CI
points(i, est[[i]][2,1], pch = 16)  # Coef
# matched dataset
lines(c(i+0.15, i+0.15), est2[[i]][2,3:4], col = "maroon", lwd = 1.5) # CI
points(i+0.15, est2[[i]][2,1], col = "maroon", pch = 17)  # Coef
}
legend("topright", legend = c("DIM,  Full (43: 259)", "AIPW, Full (43: 259)",
"AIPW, PS Matched (43: 43)"), lwd = 2,
lty = c(1, 1, 1), pch = c(18, 16, 17),
col = c("grey50", "black", "maroon"), bty = "n")
par(mar = c(4, 4, 1, 2))
plot(1, xlim = c(3.7, 13.3), ylim = c(-20, 10), type = "n", axes = FALSE,
ylab = "Effects on Earnings (thousand USD)", xlab = "Year Relative to Winning")
box(); axis(2)
axis(1, at = 4:13, labels = c(-3:6))
abline(h = 0, v= 6.5, col = "gray60", lty = 2, lwd = 2)
for (i in 4:13) {
# full dataset with DIM
lines(c(i-0.15, i-0.15), est3[[i]][1,3:4], lty = 1, lwd = 2, col = "grey60") # CI
points(i-0.15, est3[[i]][1,1], pch = 18, col = "grey60", cex = 1.2)  # Coef
# full dataset
lines(c(i, i), est3[[i]][2,3:4], lwd = 2) # CI
points(i, est3[[i]][2,1], pch = 16)  # Coef
# matched dataset
lines(c(i+0.15, i+0.15), est4[[i]][2,3:4], col = "maroon", lwd = 1.5) # CI
points(i+0.15, est4[[i]][2,1], col = "maroon", pch = 17)  # Coef
}
legend("topright", legend = c("DIM,  Full (194: 259)", "AIPW, Full (194: 259)",
"AIPW, PS Matched (194: 194)"), lwd = 2,
lty = c(1, 1, 1), pch = c(18, 16, 17),
col = c("grey50", "black", "maroon"), bty = "n")
par(mfrow = c(2,1))
par(mar = c(4, 4, 1, 2))
plot(1, xlim = c(3.7, 13.3), ylim = c(-20, 10), type = "n", axes = FALSE,
ylab = "Effects on Earnings (thousand USD)", xlab = "Year Relative to Winning")
box(); axis(2)
axis(1, at = 4:13, labels = c(-3:6))
abline(h = 0, v= 6.5, col = "gray60", lty = 2, lwd = 1.5)
for (i in 4:length(outcomes)) {
dens <- density(tau[,i], bw = 0.5)
polygon(i + dens$y, dens$x, col = "#AAAAAA50", border = NA)
lines(i + dens$y, dens$x, lwd = 1)
points(i+0.01,  att[i], pch = 16, cex = 0.8)  # Coef
}
par(mar = c(4, 4, 1, 2))
plot(1, xlim = c(3.7, 13.3), ylim = c(-20, 10), type = "n", axes = FALSE,
ylab = "Effects on Earnings (thousand USD)", xlab = "Year Relative to Winning")
box(); axis(2)
axis(1, at = 4:13, labels = c(-3:6))
abline(h = 0, v= 6.5, col = "gray60", lty = 2, lwd = 1.5)
for (i in 4:length(outcomes)) {
dens <- density(tau2[,i], bw = 0.5)
polygon(i + dens$y, dens$x, col = "#AAAAAA50", border = NA)
lines(i + dens$y, dens$x, lwd = 1)
points(i+0.01,  att2[i], pch = 16, cex = 0.8)  # Coef
}
# required packages
packages <- c("haven", "labelled", "Matching", "grf", "sensemakr", "qte",
"estimatr", "CBPS", "hbal", "DoubleML", "mlr3learners", "mlr3","fixest", "ggplot2")
# install packages
install_all <- function(packages) {
installed_pkgs <- installed.packages()[, "Package"]
for (pkg in packages) {
if (!pkg %in% installed_pkgs) {
install.packages(pkg)
}
}
}
install_all(packages)
# required packages
packages <- c("haven", "labelled", "Matching", "grf", "sensemakr", "qte",
"estimatr", "CBPS", "hbal", "DoubleML", "mlr3learners", "mlr3","fixest", "ggplot2")
# install packages
install_all <- function(packages) {
installed_pkgs <- installed.packages()[, "Package"]
for (pkg in packages) {
if (!pkg %in% installed_pkgs) {
install.packages(pkg)
}
}
}
install_all(packages)
# load packages
library(haven)
library(labelled)
library(grf)
library(Matching)
library(estimatr)
library(hbal)
library(CBPS)
library(DoubleML)
library(mlr3learners)
library(mlr3)
library(fixest)
library(ggplot2)
library(qte)
library(sensemakr)
plot_hist <- function(data, var, treat, main = NULL, odds = FALSE,
breaks = 40, density = TRUE, xlim = NULL, ylim = NULL,
xlab = NULL, text.size = 0.8) {
ntr <- sum(data[, treat] == 1)
nco <- sum(data[, treat] == 0)
if (odds == TRUE) {
data[, var] <- log(data[, var]/(1-data[, var]))
if (is.null(xlab) == TRUE) {xlab <- "Log Odds"}
} else {
if (is.null(xlab) == TRUE) {xlab <- "Propensity Score"}
}
if (is.null(xlim)) {
if (odds == TRUE) {
xlim <- range(data[, var])
cat(xlim)
} else {
xlim <- c(0,1)
}
}
intervals <- seq(xlim[1], xlim[2], length.out = breaks + 1)
h0 <- as.numeric(table(cut(data[data[,treat]==0, var],
breaks = intervals, include.lowest = TRUE)))
h1 <- as.numeric(table(cut(data[data[,treat]==1, var],
breaks = intervals, include.lowest = TRUE)))
if (density == TRUE) {
h0 <- h0/sum(h0); h1 <- h1/sum(h1)
}
s <- cbind.data.frame(h0, h1)
if (is.null(ylim)) {
ylim.max <- max(s$h0, s$h1) * 1.2
ylim <- c(-ylim.max, ylim.max)
}
par(mar = c(4, 4, 1, 1))
barplot(s$h0 * -1, names.arg = sprintf("%.2f", intervals[-1]),
col = "#AAAAAA80", main = main, cex.lab = 1.3,
ylim = ylim, xlab = xlab, cex.axis = 1.2, cex.names = 1.2,
ylab = "Density", border = NA, axes = TRUE)
barplot(s$h1, col = "#ff000080", add = TRUE,
border = NA, cex.axis = 1.2)
abline(h = 0, col = "gray60", lty = 2, lwd = 1.5)
axis(1, at = seq(1, 60, length.out = breaks/2), labels = FALSE)
usr <- par("usr")
user_x <- usr[1] + 0.03 * (usr[2] - usr[1])
user_y <- usr[3] + 0.92 * (usr[4] - usr[3])
text(user_x, user_y, paste("Ntr = ", ntr), pos = 4, cex = text.size)
text(user_x, user_y - 0.05 * (usr[4] - usr[3]), paste("Nco = ", nco),
pos = 4, cex = text.size)
box()
}
assess_overlap <- function(data, treat, cov, odds = TRUE, num.trees = NULL, seed = 1234, breaks = 50, xlim = NULL, ylim = NULL) {
if(is.null(num.trees))
{
p.forest1 <- probability_forest(X = data[, cov],
Y = as.factor(data[,treat]), seed = seed)
}
else
{
p.forest1 <- probability_forest(X = data[, cov],
Y = as.factor(data[,treat]), seed = seed, num.trees = num.trees)
}
data$ps_assoverlap <- p.forest1$predictions[,2]
#range(lcps.plus$ps)
data$ps_assoverlap[which(abs(data$ps_assoverlap) <= 1e-7)] <- 1e-7
#range(lcps.plus$ps)
if(odds == TRUE)
{
plot_hist(data, "ps_assoverlap", treat, odds = TRUE, breaks = breaks,
density = TRUE, main = "", xlim = xlim, ylim = ylim)
}
else
{
plot_hist(data, "ps_assoverlap", treat, odds = FALSE, breaks = breaks,
density = TRUE, main = "", xlim = c(0, 1), ylim = ylim)
}
return(data)
}
bookdown::render_book(new_session = F)
bookdown::render_book(new_session = F)
